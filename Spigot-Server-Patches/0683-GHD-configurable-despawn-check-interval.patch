From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: lukas81298 <lukas81298@gommehd.net>
Date: Fri, 22 Jan 2021 21:45:32 +0100
Subject: [PATCH] GHD - configurable despawn check interval


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 2335f3bb1541b78cf25969ccf35866e7f752ae55..ab6cb5070624f68b958f109e7b91c57ccc521410 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -817,5 +817,10 @@ public class PaperWorldConfig {
     public boolean updatePathfindingOnBlockUpdate = true;
     private void setUpdatePathfindingOnBlockUpdate() {
         updatePathfindingOnBlockUpdate = getBoolean("update-pathfinding-on-block-update", this.updatePathfindingOnBlockUpdate);
+	}
+	
+    public int checkDespawnTickInterval = 1;
+    private void setCheckDespawnTickInterval() {
+        checkDespawnTickInterval = getInt("check-despawn-tick-interval", this.checkDespawnTickInterval);
     }
 }
diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index 67ba4acfafed1b691d45fbdd062d0ea1b441e4a8..52b18db28c37f7d841d79afff69837ca9dda6db0 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -513,7 +513,7 @@ public class WorldServer extends World implements GeneratorAccessSeed {
                 // CraftBukkit end */
 
                 gameprofilerfiller.enter("checkDespawn");
-                if (!entity.dead) {
+                if (!entity.dead && entity.ticksLived % paperConfig.checkDespawnTickInterval == 0) { // Paper - configurable despawn check interval
                     entity.checkDespawn();
                 }
 
@@ -2235,7 +2235,7 @@ public class WorldServer extends World implements GeneratorAccessSeed {
     public String F() {
         return String.format("players: %s, entities: %d [%s], block_entities: %d [%s], block_ticks: %d, fluid_ticks: %d, chunk_source: %s", this.players.size(), this.entitiesById.size(), a(this.entitiesById.values(), (entity) -> { // CraftBukkit - decompile error
             return IRegistry.ENTITY_TYPE.getKey(entity.getEntityType());
-        }), this.tileEntityListTick.size(), a(this.tileEntityListTick, (tileentity) -> { // CraftBukkit - decompile error
+        }), this.tileEntityListTick.size(), a(this.tileEntityListTick.asList(), (tileentity) -> { // CraftBukkit - decompile error // Paper
             return IRegistry.BLOCK_ENTITY_TYPE.getKey(tileentity.getTileType());
         }), this.getBlockTickList().a(), this.getFluidTickList().a(), this.P());
     }
