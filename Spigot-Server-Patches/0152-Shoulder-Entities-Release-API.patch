From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 17 Jun 2017 15:18:30 -0400
Subject: [PATCH] Shoulder Entities Release API


diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 63f3743bbf3632badf4e66a5ee4239ccbc5df700..502154234632fbf65fada993f9a1e457fe8f41cd 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -1771,20 +1771,44 @@ public abstract class EntityHuman extends EntityLiving {
 
     }
 
+    // Paper start
+    public Entity releaseLeftShoulderEntity() {
+        Entity entity = this.spawnEntityFromShoulder0(this.getShoulderEntityLeft());
+        if (entity != null) {
+            this.setShoulderEntityLeft(new NBTTagCompound());
+        }
+        return entity;
+    }
+
+    public Entity releaseRightShoulderEntity() {
+        Entity entity = this.spawnEntityFromShoulder0(this.getShoulderEntityRight());
+        if (entity != null) {
+            this.setShoulderEntityRight(new NBTTagCompound());
+        }
+        return entity;
+    }
+    // Paper - maintain old signature
     private boolean spawnEntityFromShoulder(NBTTagCompound nbttagcompound) { // CraftBukkit void->boolean
-        if (!this.world.isClientSide && !nbttagcompound.isEmpty()) {
+        return spawnEntityFromShoulder0(nbttagcompound) != null;
+    }
+
+    // Paper - return entity
+    private Entity spawnEntityFromShoulder0(@Nullable NBTTagCompound nbttagcompound) {
+        if (!this.world.isClientSide && nbttagcompound != null && !nbttagcompound.isEmpty()) {
             return EntityTypes.a(nbttagcompound, this.world).map((entity) -> { // CraftBukkit
                 if (entity instanceof EntityTameableAnimal) {
                     ((EntityTameableAnimal) entity).setOwnerUUID(this.uniqueID);
                 }
 
                 entity.setPosition(this.locX(), this.locY() + 0.699999988079071D, this.locZ());
-                return ((WorldServer) this.world).addEntitySerialized(entity, CreatureSpawnEvent.SpawnReason.SHOULDER_ENTITY); // CraftBukkit
-            }).orElse(true); // CraftBukkit
+                boolean addedToWorld = ((WorldServer) this.world).addEntitySerialized(entity, CreatureSpawnEvent.SpawnReason.SHOULDER_ENTITY); // CraftBukkit
+                return addedToWorld ? entity : null;
+            }).orElse(null); // CraftBukkit // Paper - false -> null
         }
 
-        return true; // CraftBukkit
+        return null; // Paper - return null
     }
+    // Paper end
 
     @Override
     public abstract boolean isSpectator();
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
index af41d9f11c6da2609bd75e49f15f5ec129b92361..65144fac2d36b038bbf729bb2abe7b5a907d61fd 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
@@ -487,6 +487,32 @@ public class CraftHumanEntity extends CraftLivingEntity implements HumanEntity {
         getHandle().getCooldownTracker().setCooldown(CraftMagicNumbers.getItem(material), ticks);
     }
 
+    // Paper start
+    @Override
+    public org.bukkit.entity.Entity releaseLeftShoulderEntity() {
+        if (!getHandle().getShoulderEntityLeft().isEmpty()) {
+            Entity entity = getHandle().releaseLeftShoulderEntity();
+            if (entity != null) {
+                return entity.getBukkitEntity();
+            }
+        }
+
+        return null;
+    }
+
+    @Override
+    public org.bukkit.entity.Entity releaseRightShoulderEntity() {
+        if (!getHandle().getShoulderEntityRight().isEmpty()) {
+            Entity entity = getHandle().releaseRightShoulderEntity();
+            if (entity != null) {
+                return entity.getBukkitEntity();
+            }
+        }
+
+        return null;
+    }
+    // Paper end
+
     @Override
     public boolean discoverRecipe(NamespacedKey recipe) {
         return discoverRecipes(Arrays.asList(recipe)) != 0;
